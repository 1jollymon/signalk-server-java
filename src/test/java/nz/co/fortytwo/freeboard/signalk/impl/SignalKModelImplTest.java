package nz.co.fortytwo.freeboard.signalk.impl;

import static org.junit.Assert.*;
import static nz.co.fortytwo.freeboard.server.util.JsonConstants.*;
import mjson.Json;
import nz.co.fortytwo.freeboard.server.util.Util;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class SignalKModelImplTest {

	@Before
	public void setUp() throws Exception {
		
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public void shouldCreateSignalkModel() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":0.0000000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		Json cogM = signalk.atPath(VESSELS,SELF,nav_courseOverGroundMagnetic);
		assertEquals(cogM.asDouble(),93.0,0.000001);
		Json lat = signalk.atPath(VESSELS,SELF,nav_position_latitude);
		assertEquals(lat.asDouble(),-43.2,0.000001);
		Json wind = signalk.atPath(VESSELS,SELF,env_wind_speedTrue);
		assertEquals(wind.asDouble(),7.68,0.000001);
	}

	@Test
	public void shouldReturnBranch() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":0.0000000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		Json wind = Json.read("{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":0.0000000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}");
		Json branch = signalk.atPath(VESSELS, SELF, env_wind);
		assertEquals(wind, branch);
	}
	@Test
	public void shouldReturnLeaf() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		Json dirTrue = signalk.atPath(VESSELS, SELF, env_wind_directionTrue);
		assertEquals(dirTrue.asDouble(),256.3,0.000001);
	}
	
	@Test
	public void shouldMergeBranch() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000}}}}");
		signalk.merge(data);
		assertNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json wind = Json.read("{\"vessels\":{\"self\":{\"environment\":{\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(wind);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json dirTrue = signalk.atPath(VESSELS, SELF, env_wind_directionTrue);
		assertEquals(dirTrue.asDouble(),256.3,0.000001);
	}
	
	@Test
	public void shouldMergeBranchAtPath() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000}}}}");
		signalk.merge(data);
		assertNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json wind = Json.read("{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}");
		signalk.mergeAtPath(VESSELS+"."+ SELF+".environment","wind", wind);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json dirTrue = signalk.atPath(VESSELS, SELF, env_wind_directionTrue);
		assertEquals(dirTrue.asDouble(),256.3,0.000001);
	}
	
	@Test
	public void shouldMergeBranchAtExistingPath() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json wind = Json.read("{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}");
		signalk.mergeAtPath(VESSELS+"."+ SELF+".environment","wind", wind);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json dirTrue = signalk.atPath(VESSELS, SELF, env_wind_directionTrue);
		assertEquals(dirTrue.asDouble(),256.3,0.000001);
	}
	
	@Test
	public void shouldMergeBranchWithoutKey() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json wind = Json.read("{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}");
		signalk.mergeAtPath(VESSELS+"."+ SELF+".environment.wind", wind);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		Json dirTrue = signalk.atPath(VESSELS, SELF, env_wind_directionTrue);
		assertEquals(dirTrue.asDouble(),256.3,0.000001);
	}
	@Test
	public void shouldSetLeaf() {
		
	}
	@Test
	public void shouldDeleteBranch() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		signalk.delete(signalk.atPath(VESSELS, SELF, environment), "wind");
		assertNull(signalk.atPath(VESSELS, SELF, env_wind));
	}
	@Test
	public void shouldDeleteBranchFromPath() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000,\"wind\":{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}}}}}");
		signalk.merge(data);
		assertNotNull(signalk.atPath(VESSELS, SELF, env_wind));
		signalk.delete(VESSELS+"."+SELF+"."+environment, "wind");
		assertNull(signalk.atPath(VESSELS, SELF, env_wind));
	}
	@Test
	public void shouldDeleteUnderscored() {
		SignalKModelImpl signalk = new SignalKModelImpl();
		Json data = Json.read("{\"vessels\":{\"self\":{\"navigation\":{\"courseOverGroundTrue\":0.0000000000,\"courseOverGroundMagnetic\":93.0000000000,\"headingMagnetic\":0.0000000000,\"magneticVariation\":0.0000000000,\"headingTrue\":0.0000000000,\"pitch\":0.0000000000,\"rateOfTurn\":0.0000000000,\"roll\":0.0000000000,\"speedOverGround\":0.0000000000,\"speedThroughWater\":0.0000000000,\"state\":\"Not defined (example)\",\"anchor\":{\"alarmRadius\":0.0000000000,\"maxRadius\":0.0000000000,\"position\":{\"latitude\":0.0000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"position\":{\"latitude\":-43.2000000000,\"longitude\":0.0000000000,\"altitude\":0.0000000000}},\"alarm\":{\"anchorAlarmMethod\":\"sound\",\"anchorAlarmState\":\"disabled\",\"autopilotAlarmMethod\":\"sound\",\"autopilotAlarmState\":\"disabled\",\"engineAlarmMethod\":\"sound\",\"engineAlarmState\":\"disabled\",\"fireAlarmMethod\":\"sound\",\"fireAlarmState\":\"disabled\",\"gasAlarmMethod\":\"sound\",\"gasAlarmState\":\"disabled\",\"gpsAlarmMethod\":\"sound\",\"gpsAlarmState\":\"disabled\",\"maydayAlarmMethod\":\"sound\",\"maydayAlarmState\":\"disabled\",\"panpanAlarmMethod\":\"sound\",\"panpanAlarmState\":\"disabled\",\"powerAlarmMethod\":\"sound\",\"powerAlarmState\":\"disabled\",\"silentInterval\":300,\"windAlarmMethod\":\"sound\",\"windAlarmState\":\"disabled\",\"genericAlarmMethod\":\"sound\",\"genericAlarmState\":\"disabled\",\"radarAlarmMethod\":\"sound\",\"radarAlarmState\":\"disabled\",\"mobAlarmMethod\":\"sound\",\"mobAlarmState\":\"disabled\"},\"steering\":{\"rudderAngle\":0.0000000000,\"rudderAngleTarget\":0.0000000000,\"autopilot\":{\"state\":\"off\",\"mode\":\"powersave\",\"targetHeadingNorth\":0.0000000000,\"targetHeadingMagnetic\":0.0000000000,\"alarmHeadingXte\":0.0000000000,\"headingSource\":\"compass\",\"deadZone\":0.0000000000,\"backlash\":0.0000000000,\"gain\":0,\"maxDriveAmps\":0.0000000000,\"maxDriveRate\":0.0000000000,\"portLock\":0.0000000000,\"starboardLock\":0.0000000000}},\"environment\":{\"airPressureChangeRateAlarm\":0.0000000000,\"airPressure\":1024.0000000000,\"waterTemp\":0.0000000000}}}}");
		signalk.merge(data);
		assertNull(signalk.atPath(VESSELS, SELF, "navigation._arduino"));
		Json wind = Json.read("{\"speedAlarm\":0.0000000000,\"directionChangeAlarm\":0.0000000000,\"directionApparent\":0.0000000000,\"directionTrue\":256.300000000,\"speedApparent\":0.0000000000,\"speedTrue\":7.6800000000}");
		signalk.mergeAtPath(VESSELS+"."+ SELF+".navigation","_arduino", wind);
		assertNotNull(signalk.atPath(VESSELS, SELF, "navigation._arduino"));
		Json safeNode = Util.safe(signalk.duplicate());
		assertNull(Util.findNode(safeNode, VESSELS+"."+SELF+".navigation._arduino"));
		assertNotNull(signalk.atPath(VESSELS, SELF, "navigation._arduino"));
	}
}
